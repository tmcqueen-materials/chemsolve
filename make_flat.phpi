<?php
// Takes a nested tree-array formula and makes it flat
function make_flat($tgt, $newtgt=array(), $factor=1) {
    $warnings = array();
    for ($i = 0; $i < count($tgt); $i++) {
        if (is_array($tgt[$i][0][0])) {
            if ($tgt[$i][1] > 0) {
                $rv = make_flat($tgt[$i][0], $newtgt, $tgt[$i][1]*$factor);
                $newtgt = $rv[0];
                for ($j = 0; $j < count($rv[1]); $j++)
                    $warnings[] = $rv[1][$j];
            }
        } else {
            if ($tgt[$i][1] > 0) {
                $added = false;
                for ($j = 0; $j < count($newtgt) && !$added; $j++) {
                    if (strcmp(implode($tgt[$i][0]), implode($newtgt[$j][0])) == 0) {
                        $newtgt[$j][1] += $tgt[$i][1]*$factor;
                        $added = true;
                    }
                }
                if (!$added) {
                    $newtgt[] = array($tgt[$i][0], $tgt[$i][1]*$factor);
                }
            }
        }
    }

    return array($newtgt, $warnings);
}
?>
